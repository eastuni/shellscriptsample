#!/bin/sh
SUB=("1" "2")
find_sub(){
    local key="$1"
    for line2 in $LIST
    do
        local arr2=(`echo $line2|cut -d "/" --output-delimiter=" " -f 1-`)
    #   echo "${arr2[0]} =~ $1"
        if [[ "${arr2[0]}" =~ "$key" ]];then
            SUB=(${arr2[0]} ${arr2[1]})
            #echo "sub: ${arr2[0]} ${arr2[1]}"
            return 0
        fi
    done
    SUB=""
}

echo '-------------------------------'
if [[ $# -eq 1 ]];then
    TARGETLOG=$HOME/bxm/logs/online/$1
else
    TARGETLOG=$HOME/bxm/logs/online/on_`date "+%Y%m%d"`.log
fi
LIST=`grep "BeanCreation" $TARGETLOG|grep " is failed.this bean will be removed" |awk '{gsub(/[\[\]]/,"");split($(NF-32),a,"."); split($(NF-19),b,".");print a[length(a)]"/"b[length(b)]}'|sort -u`

#echo "$LIST"

for line1 in $LIST
do
    #echo $line1
    echo ""
    arr=(`echo $line1|cut -d "/" --output-delimiter=" " -f 1-`)
    #echo "${arr[0]}, ${arr[1]}"
    RET="${arr[0]} -> ${arr[1]}"
    while [[ 1==1 ]]
    do
        find_sub ${arr[1]}
        #echo "sub ${SUB[0]} ${SUB[1]}"
        if [ "$SUB" == "" ];then
    #       echo "break"
            break
        fi
        if [ "${SUB[0]}" == "${arr[1]}" ];then
            RET="$RET ->  ${SUB[1]}"
        else
            RET="$RET -> ${SUB[0]} -> ${SUB[1]}"
        fi
        arr=(${SUB[0]} ${SUB[1]})
    done
    echo "$RET"
done
echo '-------------------------------'
